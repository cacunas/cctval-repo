#include "exp01EventAction.hh"
#include "G4Event.hh"
#include "G4UnitsTable.hh"
#include "exp01SensitiveDetector.hh"
#include "exp01RunAction.hh"

#include "G4HCofThisEvent.hh"
#include "G4SDManager.hh"
#include "G4THitsMap.hh"
#include "TTree.h"
#include <iomanip>

exp01EventAction::~exp01EventAction(){}

void exp01EventAction::BeginOfEventAction(const G4Event* evt)
{ 
  TString n;
  G4int evtNb = evt->GetEventID();
  G4cout << "\n---> Begin of event: " << evtNb << G4endl;
  n.Form("%d",evtNb);
  tree = new TTree("tree_"+n,"Experiment "+n);
  tree->Branch("energy",&energy,"energy/D");
  
  
/*  G4int evtNb = evt->GetEventID();
  
  if (evtNb == 0) {
    G4SDManager* SDMan = G4SDManager::GetSDMpointer(); 
    SDMan->SetVerboseLevel(2);
    i = SDMan->GetCollectionID("Left_det/left_edep");
    j = SDMan->GetCollectionID("Right_det/right_edep");  
    
    G4cout<<"Left detector ID"<<i<<G4endl; 
    G4cout<<"Right detector ID"<<j<<G4endl;
  }  */
}

void exp01EventAction::EndOfEventAction(const G4Event* evt) 
{ 

	G4int evtNb = evt->GetEventID();
	G4cout << "end of event "<<evtNb <<G4endl;
	  tree->Write();
  delete tree;  
	/*G4HCofThisEvent* HCE = evt->GetHCofThisEvent();
	if(!HCE) return;

	G4THitsMap<G4double>* evtMap = (G4THitsMap<G4double>*)(HCE->GetHC(i));
	std::map<G4int,G4double*>::iterator itr;
	for (itr = evtMap->GetMap()->begin(); itr != evtMap->GetMap()->end(); itr++) {
		G4int copyNb  = (itr->first);
		G4double edep = *(itr->second);
		G4cout << "\n  edep" << evtNb << ": " << edep/keV << " keV " <<G4endl;
	}
	
	
	G4int evtNb = evt->GetEventID();

	G4HCofThisEvent* HCE = evt->GetHCofThisEvent();
	G4int n = HCE->GetNumberOfCollections();
	
	if (evtNb == 0) G4cout << "Number of collections \t" << n <<G4endl;

	G4THitsMap<G4double>* evtMap = (G4THitsMap<G4double>*)(HCE->GetHC(i));
	n = evtMap->entries();
	if(n!=0)
	G4cout << "Map entries for i" << n << G4endl;
	
	evtMap = (G4THitsMap<G4double>*)(HCE->GetHC(j));
	n = evtMap->entries();
	if(n!=0)
	G4cout << "Map entries for j" << n << G4endl;


	G4double* pVal = (*evtMap)[i];
	G4double val = *pVal;

	G4cout << "eDep: " << val << G4endl;

*/

}  

